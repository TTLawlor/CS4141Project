// Author(s) 
// Tamara Lawlor 19276494
// Mary Tease 19256434
// Rachel O'Donoghue 19274505
public class CS4141Project
{
   String[] tabs = new String[256];
   private int nextAvailable = 3;
   private int nextSheetNumber;
   private int indexNumber;
   private int sheetsAvailable;
   int i;
   int index = i + 1;
   
    public void init(){
      tabs[0] = "Sheet1";
      tabs[1] = "Sheet2";
      tabs[2] = "Sheet3";
      
   }
   
   public boolean add(){
       nextSheetNumber = nextAvailable + 1;
       String x= "Sheet" + Integer.toString(nextSheetNumber);
       if(nextAvailable < tabs.length){
        tabs[nextAvailable]=x;
        nextAvailable++;
        return true;
       }
       
       return false;
   }

   public void Display(){
      for(int i=0;i < nextSheetNumber; i++){
        System.out.print(tabs[i] + " ");
      }
   }
   
   public int index(String sheetName){
        for(int i=0;i < nextAvailable; i++){
         if(!tabs[i].equals(null) && tabs[i].equalsIgnoreCase(sheetName)){
          indexNumber = i;
          return indexNumber;//if found

        }
       }
       return -1;//if not found
   }
   
   public int length(){
       sheetsAvailable = tabs.length - nextAvailable;
       return tabs.length - sheetsAvailable;
   }
   
   public String sheetName(int index){
        for(int i=0;i < tabs.length; i++){
          if(i == index){
          indexNumber = i;
          return tabs[i-1]; //if found
          }
       }
       return null; //if not found
   }
   
   //CASE SENSITIVE
   public int rename(String currentName, String newName){
       for(int i=0;i < tabs.length; i++){
          String temp = "";
          if(tabs[i].equalsIgnoreCase(currentName)){
             temp = tabs[i].replace(currentName, newName);
             tabs[i] = temp;
             return i;
          }
       }
       return -1; 
   }
   
   public int shiftRight(int index) {
        for(i = index;i < tabs.length-1; i++) {
            tabs[i] = tabs[i - 1];
        }
        return 0; 
   }
    
   public int shiftLeft(int index) {
        for(i = index;i < tabs.length - 1; i++) {
            tabs[i] = tabs[i + 1];
        }
        return 0;
   }
   
   public int remove(String sheetName){
       for(int i=index;i < tabs.length - 1; i++){
           if(nextAvailable != 1 && tabs[i].equalsIgnoreCase(sheetName)){
               shiftLeft(i);
               i = i + 1;
               return i; //if sheet3 returns 3
            }
       }
       return -1;
   }
   
   public String remove(int index){
       for(int i=index;i < tabs.length - 1; i++){
           if(tabs.length != 1 && i == index){
               i = i - 1;
               String x= "Sheet" + Integer.toString(index);
               shiftLeft(i);
               
               return x; //if 3 returns sheet3
            }
        }
       return null;
   }
   
   
   public String moveToEnd(int from){
       for(int i=index;i < tabs.length - 1; i++){
           if(from < tabs.length){
               i = i + 1;
               String temp = "Sheet" + Integer.toString(from);
               remove(from); 
               tabs[nextAvailable - 1] = temp;
               return temp; //if 2 returns sheet 2
            }
        }
       return null; 
   }
    
   public int moveToEnd(String from){
       for(int i=index;i < tabs.length - 1; i++){
           if(tabs[i].equalsIgnoreCase(from)){
               i = i + 1;
               String temp = from;
               remove(from);
               tabs[nextAvailable - 1] = temp;
               return i; //if sheet2 returns 2
            }
        }
       return -1;
   }
    
    
   //NOT WORKING
   public int move(String from, String to, boolean before){
       for(int i =index;i < tabs.length - 1; i++){
          int indexOfFrom = index(from + 1);
          int indexOfTo = index(to);
          if(!from.equalsIgnoreCase(to) && tabs[i].equalsIgnoreCase(to)){
              if(before == true){
                 if(indexOfFrom < indexOfTo){
                     shiftRight(indexOfFrom);
                     indexOfFrom = indexOfTo - 1;
                     
                    } else{
                     shiftLeft(indexOfFrom);
                     indexOfFrom = indexOfTo - 1;
                }
                return indexOfTo; //moved before the to sheet
                } else {
                   if(indexOfFrom < indexOfTo){
                     shiftRight(indexOfFrom);
                     indexOfFrom = indexOfTo + 1;
                     
                    } else{
                     shiftLeft(indexOfFrom);
                     indexOfFrom = indexOfTo + 1;
                }
              }
          }
       }
       return -1; //if from = to
   }  
   
   
   
   
}
 
    
    
